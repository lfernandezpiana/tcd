% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icd.R
\name{icd}
\alias{icd}
\title{Integrated Circular Depth (version 5 with weights)}
\usage{
icd(
  traj,
  beta = "automatic",
  probs = seq(0, 1, 0.1),
  type = "geographical",
  weight = TRUE
)
}
\arguments{
\item{traj}{A list which contains the trajectories.}

\item{beta}{Locality level numeric between 0 and 1. Could be set as "automatic" and beta is selected in a data driven way.}

\item{probs}{Sequence of probabilities for grid construction.}

\item{type}{The trajectory type of coordinates "geographical" or "cartesian". If "geographical" made correction for lat and long coordinates.}

\item{weight}{If TRUE a weight in each radius is applied.}
}
\value{
icd returns a list containing the following components:
\itemize{
\item depth: a numeric vector which contains the depth for each trajectory.
\item grid: a numeric vector representing the radius grid.
\item polar: a list that contains the polar coordinates for each trajectory.
}
}
\description{
Calculates the integrated circular depth for a bouquet of trajectories.
}
\examples{

library(trend)
library(tcd)

# Trajectories parameters
tita_0 = pi
alpha_epsilon = 0.05
size = 0.1
po = c(0,0)
m = 30
n = 100
tray = vector(mode="list", length=n)
for (j in 1:n) {
  P = matrix(0, nrow=m, ncol=2)
  P[1,] = po
  tita = tita_0
  for (i in 2:m) {
    tita = c(tita, tita[i-1] + alpha_epsilon*rbinom(1,1,0.5))
    P[i,] = P[i-1,] + size*c(cos(tita[i]), sin(tita[i]))
  }
  tray[[j]] = P
}
# Depth
depth = icd(tray, probs = seq(0.1,1,0.05), type="cartesian")
q_max = which(depth$depth>quantile(depth$depth, 0.9))
q_min = which(depth$depth<quantile(depth$depth, 0.10))

plot(tray[[1]], type="n", xlim=c(-3,3), ylim=c(-2,2), xlab="", ylab="", main="Ejemplo 1")
for (i in 1:n) lines(tray[[i]], col="lightgrey")
for (i in q_max) lines(tray[[i]], col="blue")
for (i in q_min) lines(tray[[i]], col="red")
}
